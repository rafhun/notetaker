 import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api, type RouterOutputs } from "~/utils/api";
import { Header } from "~/components/Header";
import { useState } from "react";

type Topic = RouterOutputs["topic"]["getAll"][0];

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Notetaker</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Content />
      </main>
    </>
  );
};

export default Home;

const Content: React.FC = () => {
  const {data: sessionData} = useSession();
  const [selectedTopic, setSelectedTopic] = useState<Topic | null>(null)
  const {data: topics, refetch: refetchTopics} = api.topic.getAll.useQuery(
    undefined, // no input
    {
      enabled: sessionData?.user !== undefined,
      onSuccess: (data) => {
        setSelectedTopic(selectedTopic ?? data[0] ?? null)
      }
    }
  );

  const createTopic = api.topic.create.useMutation({
    onSuccess: () => {
      void refetchTopics();
    }
  });

  return (
    <div className="mx-5 mt-5 grid grid-cols-4 gap-2">
      <div className="px-2">
        {topics && (
          <ul className="w-56 flex flex-col">
            {topics.map((topic) => (
              <li key={topic.id}>
                <button
                  onClick={(e) => {
                    e.preventDefault();
                    setSelectedTopic(topic)
                  }}
                  className={`px-3 py-2 inline-flex hover:bg-slate-300 dark:hover:bg-slate-700 ${topic === selectedTopic ? 'font-bold' : ''}`}
                >
                  {topic.title}
                </button>
              </li>
            ))}
          </ul>
        )}
        <input
          id="new-topic-input"
          type="text"
          className="w-full border bg-slate-200 px-3 py-2 text-slate-800 dark:bg-slate-700 dark:text-slate-50"
          placeholder="New Topic"
          onKeyDown={(e) => {
            if (e.key === "Enter" && e.currentTarget.value !== "") {
              createTopic.mutate({
                title: e.currentTarget.value,
              });
              e.currentTarget.value = "";
            }
          }}
        />
        <label htmlFor="new-topic-input" className="sr-only">
          Add new topic (press enter to submit)
        </label>
      </div>
      <div className="col-span-3"></div>
    </div>
  );
}
